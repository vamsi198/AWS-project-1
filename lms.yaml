AWSTemplateFormatVersion: "2010-09-09"
Description: LMSVPC
Resources:
  LMSVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: LMSVPC
  LMSfrontendSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: LMSVPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: "eu-west-2a"
      Tags:
        - Key: Name
          Value: frontend-subnet
  LMSbackendSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: LMSVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: "eu-west-2b"
      Tags:
        - Key: Name
          Value: backend-subnet
  LMSdatabaseSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: LMSVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: "eu-west-2c"
      Tags:
        - Key: Name
          Value: database-subnet  
  LMSInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: LMS-internet gateway
  LMSAttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: LMSVPC
      InternetGatewayId:
        Ref: LMSInternetGateway
  LMSfrontendRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: LMSVPC
      Tags:
        - Key: Name
          Value: Frontend-routetable
  frontendSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: LMSfrontendSubnet
      RouteTableId:
        Ref: LMSfrontendRouteTable
  LMSfrontendRoute:
    Type: AWS::EC2::Route
    DependsOn: LMSAttachGateway
    Properties:
      RouteTableId:
        Ref: LMSfrontendRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: LMSInternetGateway  
  LMSbackendRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: LMSVPC
      Tags:
        - Key: Name
          Value: backend-routetable
  backendSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: LMSbackendSubnet
      RouteTableId:
        Ref: LMSbackendRouteTable
  LMSbackendRoute:
    Type: AWS::EC2::Route
    DependsOn: LMSAttachGateway
    Properties:
      RouteTableId:
        Ref: LMSbackendRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: LMSInternetGateway 
  LMSdatabaseRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: LMSVPC
      Tags:
      - Key: Name
        Value: database-routetable
  databaseSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: LMSdatabaseSubnet
      RouteTableId:
        Ref: LMSdatabaseRouteTable
  LMSfrontbackendNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: LMSVPC
      Tags:
        - Key: Name
          Value: frontend-backend-nacl
  frontendSubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: LMSfrontendSubnet
      NetworkAclId:
        Ref: LMSfrontbackendNetworkAcl
  backendSubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: LMSbackendSubnet
      NetworkAclId:
        Ref: LMSfrontbackendNetworkAcl
  LMSfrontbackendInboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: LMSfrontbackendNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 0
        To: 65535
  LMSfrontbackendOutboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: LMSfrontbackendNetworkAcl
      RuleNumber: 100
      Protocol: -1
      Egress: true
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
  LMSdatabaseNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: LMSVPC
      Tags:
        - Key: Name
          Value: database-nacl
  databaseSubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: LMSdatabaseSubnet
      NetworkAclId:
        Ref: LMSdatabaseNetworkAcl
  LMSdatabseInboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: LMSdatabaseNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 0
        To: 65535
  LMSdatabaseOutboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: LMSdatabaseNetworkAcl
      RuleNumber: 100
      Protocol: -1
      Egress: true
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
  frontendInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http port 80 to client host
      VpcId: !Ref LMSVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0  
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
  backendInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow nodejs port 8080 to client host
      VpcId: !Ref LMSVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0 
  databaseInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow postgres port 5432 to client host
      VpcId: !Ref LMSVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0   